
doctype html
html
    head
        title= "SWOT PROTOTYPE"
        script
            include ../resources/extlibs/socket.io.js
    body
    block content
        <canvas id="canvas"></canvas>

        script(type='text/javascript').
            (function () {
                // http://paulirish.com/2011/requestanimationframe-for-smart-animating/
                // http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating
                // requestAnimationFrame polyfill by Erik MÃ¶ller. fixes from Paul Irish and Tino Zijdel
                // MIT license
                var lastTime = 0;
                var vendors = ['ms', 'moz', 'webkit', 'o'];
                for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {
                    window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];
                    window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame']
                    || window[vendors[x] + 'CancelRequestAnimationFrame'];
                }
                if (!window.requestAnimationFrame)
                    window.requestAnimationFrame = function (callback, element) {
                        var currTime = new Date().getTime();
                        var timeToCall = Math.max(0, 16 - (currTime - lastTime));
                        var id = window.setTimeout(function () {
                                    callback(currTime + timeToCall);
                                },
                                timeToCall);
                        lastTime = currTime + timeToCall;
                        return id;
                    };
                if (!window.cancelAnimationFrame)
                    window.cancelAnimationFrame = function (id) {
                        clearTimeout(id);
                    };
            }());

            (function () {
                var zombie,
                        zombieImage,
                        canvas;

                var stepSize = 80;

                function gameLoop() {
                    window.requestAnimationFrame(gameLoop);
                    zombie.update();
                    zombie.render();
                }

                function sprite(options) {
                    var that = {},
                            frameIndex = 0,
                            tickCount = 0,
                            ticksPerFrame = options.ticksPerFrame || 0,
                            numberOfFrames = options.numberOfFrames || 1;
                    that.context = options.context;
                    that.width = options.width;
                    that.height = options.height;
                    that.image = options.image;
                    that.x = canvas.width / 2;
                    that.y = canvas.height / 2;
                    that.moveLeft = function() {
                        if (that.x - stepSize < 0) that.x = canvas.width;
                        else that.x -= stepSize;
                    };
                    that.moveRight = function() {
                        if (that.x + stepSize > canvas.width) that.x = 0;
                        else that.x += stepSize;
                    };
                    that.moveDown = function() {
                        if (that.y + stepSize > canvas.height) that.y = 0;
                        else that.y += stepSize;
                    };
                    that.moveUp = function() {
                        if (that.y - stepSize < 0) that.y = canvas.height;
                        else that.y -= stepSize;
                    };
                    that.update = function () {
                        tickCount += 1;
                        if (tickCount > ticksPerFrame) {
                            tickCount = 0;
                                        // If the current frame index is in range
                            if (frameIndex < numberOfFrames - 1) {
                                // Go to the next frame
                                frameIndex += 1;
                            } else {
                                frameIndex = 0;
                            }
                        }
                    };
                    that.render = function () {
                                  // Clear the canvas
                        that.context.clearRect(0, 0, canvas.width, canvas.height);
                                  // Draw the animation

                        that.context.drawImage(
                                that.image,
                                frameIndex * that.width / numberOfFrames,
                                0,
                                that.width / numberOfFrames,
                                that.height,
                                that.x,
                                that.y,
                                that.width / numberOfFrames,
                                that.height);
                    };
                    return that;
                }
                            // Get canvas
                canvas = document.getElementById("canvas");
                canvas.width = 1800;
                canvas.height = 800;
                            // Create sprite sheet
                zombieImage = new Image();
                            // Create sprite
                zombie = sprite({
                    context: canvas.getContext("2d"),
                    width: 512,
                    height: 64,
                    image: zombieImage,
                    numberOfFrames: 8,
                    ticksPerFrame: 4
                });
                            // Load sprite sheet
                zombieImage.addEventListener("load", gameLoop);
                zombieImage.src = "zombie.png";

                // For usage with XAMPP use localhost, e.g. :
                // http://localhost:83
                var socket = io.connect('http://13.13.13.17:83');
                socket.on('move', function (direction) {
                    if (direction == "up") zombie.moveUp();
                    if (direction == "down") zombie.moveDown();
                    if (direction == "left") zombie.moveLeft();
                    if (direction =="right") zombie.moveRight();
                });
            }());
